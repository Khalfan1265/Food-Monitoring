F_Monitoring/
├── app/
│   ├── __init__.py
│   ├── main.py                # FastAPI app entry point
│   ├── database.py            # Database connection and session
│   ├── models.py              # SQLAlchemy models (Student, Device, etc.)
│   ├── schema.py              # Pydantic schemas (StudentIn, StudentOut, etc.)
│   ├── security.py            # Hashing, token creation, get_current_user
│   ├── utils.py               # Utility functions (like hash_password, verify_password)
│   ├── routes/                # API route files (modularized)
│   │   ├── __init__.py
│   │   ├── student.py         # /student POST and other student-related endpoints
│   │   ├── device.py
│   │   ├── health.py
│   │   ├── food.py
│   │   ├── drink.py
│   │   ├── allergy.py
│   │   ├── food_suggestion.py
│   │   ├── auth.py            # Login route, issues JWT
│   │   ├── secure.py          # Protected route using JWT
├── requirements.txt           # Python dependencies (like fastapi, uvicorn, sqlalchemy, etc.)


F_Monitoring/
│
├── app/
│   ├── __init__.py
│   ├── main.py                    # Entry point: includes routers, CORS, OpenAPI setup
│
│   ├── models.py                  # SQLAlchemy models
│   ├── schema.py                  # Pydantic schemas (for request/response validation)
│   ├── database.py                # DB connection + session dependency
│   ├── utils.py                   # Utility functions (e.g., hashing, role checks)
│   ├── security.py                # JWT, password hashing, auth dependencies
│
│   ├── routes/                    # All route files
│   │   ├── __init__.py
│   │   ├── student.py             # Register, update, get students
│   │   ├── device.py              # IoT devices routes
│   │   ├── health.py              # Health readings
│   │   ├── food.py                # Food-related endpoints
|   |   ├── password_reset.py      # 
│   │   ├── drink.py
│   │   ├── allergy.py
│   │   ├── food_suggestion.py     # Smart suggestions based on user profile
│   │   ├── auth.py                # Login and token return
│   │   └── secure.py              # Protected & role-based routes
│
├── requirements.txt              # All Python dependencies
├── alembic/ or migrations/       # Optional: Version-controlled DB migrations (Alembic)
├── .env                          # Environment variables (SECRET_KEY, DB_URL, etc.)
└── README.md

